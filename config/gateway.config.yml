http:
  port: 8080

apiEndpoints:
  my-api:
    host: localhost
    paths: /*

serviceEndpoints:
  express-service:
    url: http://localhost:5001 

policies:
  - cors
  - proxy
  - log
  - rate-limit
  - custom-log
  - rewrite
  - headers
  - response-transformer

pipelines:
  default:
    apiEndpoints:
      - my-api
    policies:
      - rewrite:   
        - action:   
            search: /api/   
            replace: /api/v2/ 
      - custom-log:
          - action:
              message: "This is a custom log message!"
      - headers:
          - action:
              forwardHeaders: {}
              requestHeaders:
                add:
                  x-start-time: "{{Date.now()}}"
      - rate-limit:
          - action:
              rateLimitBy: ip                   
              max: 10                           # Maximum 10 requests
              windowMs: 60000                   # Time window of 60 seconds (1 minute)
              delayMs: 0                        
              message: 'Too many requests, please try again later.' 
      - log:
          - action:
              level: info
              message: ${req.method} ${req.originalUrl} 
              logger:
                type: console
                format: '{{timestamp}} [{{level}}] {{message}}'
                timestamp: true
      - cors:
          - action:
              origin: "*"            # Allow all origins
              methods:               # Allowed HTTP methods
                - GET
                - POST
                - PUT
                - DELETE
              headers:               # Allowed headers
                - Authorization
                - Content-Type
              credentials: true   
      - proxy:
          - action:
              serviceEndpoint: express-service # Forwards requests to the backend
      - headers:
          - action:
              forwardHeaders: {}
              responseHeaders:
                add:
                  x-response-time: >
                    {{Date.now() - Number(request.headers['x-start-time'])}}ms
      # Include the x-response-time in the response body
      - response-transformer:
          - action:
              body:
                add:
                  responseTime: "{{response.headers['x-response-time']}}"
logs:
  console:
    level: debug